This program performs image stenography, the process of hiding information or data within an image, with user provided data and images stored in the PPM format.

The program works by replacing the least significant bit in the color values which make up the pixels in the provided image with the bits the provided data. 

The program encodes an 8 bit (1 byte) number into the program for every character(the number is the characters ASCII coce) in the data the user provided to encode. 

The program will take in a given PPM image and output a new PPM with encoded data if in encode mode or the decoded data if in decode mode.

The program can be used like this.
    First compile the program with Make.

    Then to run it type the command in the following format
    ./imageSten {-flags} [Filepath to Image file] [Data to encode | file to get data from or output data to]

    The program takes three primary arguments 
        The flags; a list of single characters used to set things like whether to encode or decode data
        The file path to the imgage file to work with 
        The data to encode in the image, a path to the file with the data to encode (Requires the file flag to be set), a path to the file to output decoded data to (Requires file and decode flag to set)
    
    List of flags:
        d: Sets the program to decode mode. Will read data out of provided image instead of encoding data into it
        f: Tells the program to look for a file path in the last argument. If in encode mode will encode the contents of the file into the image. if the program is in decode mode it uses the file as a place to output the data it decodes. (If the program is in decode mode and no file path is provided it will output to a default file name and location)
        3: Forces the outputed PPM image to be a P3 PPM (P3 ppms store all of there information in ASCII encoding)
        6: Forces the outputed PPM image to be a P6 PPM (P6 ppms store the header information in ASCII but everything else in binary)
        Notes: Flags should be placed immeditatly after the ./imageSten and shoudl start with a '-'

Example Uses:
    ./imageSten TestFiles/WhiteSquare.ppm "Hello World"
        Encodes the text "Hello World" into the image stored in the WhiteSquare.ppm file.
    ./imageSten -d TestFiles/WhiteSquare_ENCODED.ppm 
        Outputs the text encoded into the image stored at TestFiles/WhiteSquare_ENCODED.ppm (This is the image output by the previous command)
    ./imageSten -f TestFiles/Galaxy.ppm TestFiles/ShortSampleText.txt
        Encodes the contents of the file ShortSampleText.txt into the image stored in the Galaxy.ppm
    ./imageSten -df TestFiles/Galaxy_ENCODED.ppm DecodedText.txt
        Outputs the text encoded into the image stored at TestFiles/Galaxy_ENCODED.ppm (This is the image output by the previous command) and saves it to a file named Galaxy.txt.
    
*Example images and data are included in the TestFiles folder

